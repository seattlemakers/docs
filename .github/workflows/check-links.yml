name: Check Links

on:
  # Run on push to main branch
  push:
    branches: [ main, master ]
  # Run on pull requests
  pull_request:
    branches: [ main, master ]
  # Allow manual trigger
  workflow_dispatch:
  # Run once per day
  schedule:
    - cron: "0 0 * * *"

jobs:
  linkChecker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write # For creating issues when broken links are found
      
    # Define environment variables for the job
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # For private repositories, use the built-in GITHUB_TOKEN
          token: ${{ secrets.GITHUB_TOKEN }}
          # Fetch all history and tags
          fetch-depth: 0
      
      - name: Link Checker
        id: lychee
        uses: lycheeverse/lychee-action@v2
        with:
          args: >
            --verbose
            --no-progress
            --max-retries 3
            --timeout 30
            --insecure
            --github-token ${{ secrets.GITHUB_TOKEN }}
            "./**/*.md"
          # Don't fail on link errors
          fail: false
          # Output file 
          output: ./lychee/out.md
          # Enable GitHub token to avoid rate limiting
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Issue From File
        if: steps.lychee.outputs.exit_code != 0
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: Link Checker Report
          content-filepath: ./lychee/out.md
          labels: report, automated issue
          token: ${{ secrets.GITHUB_TOKEN }}